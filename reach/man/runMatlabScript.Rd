% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runMatlabScript.R
\name{runMatlabScript}
\alias{runMatlabScript}
\title{Starts Matlab on the R console and executes a Matlab script file}
\usage{
runMatlabScript(scriptName)
}
\arguments{
\item{scriptName}{String denoting the .m script (with or without the file
extension)}
}
\description{
Starts Matlab on the R console (or for MS Windows: in an extra Matlab console
window), executes the input Matlab script file (.m file) and quits Matlab.
}
\details{
As R and Matlab cannot directly exchange data natively, no value
  will be returned directly. Instead, let Matlab save the results of its
  computations and load these into R for further processing. See also the
  following system call example:
  system('/Applications/MATLAB_R2013a.app/bin/matlab -nosplash -nodesktop -r
  "S_test; quit;"') An error in the Matlab script prevents Matlab from
  quitting in the R console and might require killing the Matlab process or a
  re-start of the R session. So check the script in Matlab before executing
  it within R.
}
\note{
The function expects the script to be saved in the current R working
  directory. The script file might as well be generated by R code on the fly
  as shown in the examples section.
}
\examples{
\dontrun{

scriptName <- "myscript.m"
mypath <- getwd()
print(mypath)
scriptCode <- "pwd, x=1:2:7; y=3; z=x.^y; save xyz.mat x y z -v7"
writeLines(scriptCode, con=scriptName)
list.files(mypath)

runMatlabScript(scriptName)

list.files(mypath)
system(paste("rm ", scriptName, sep=""))
inp <- R.matlab::readMat("xyz.mat")
str(inp)
system("rm xyz.mat")
list.files(mypath)
}

}
\author{
Christoph Schmidt <christoph.schmidt@med.uni-jena.de>
}
\seealso{
\code{\link{convert2RData}}, \code{\link{runMatlabCommand}}
}

